plugins {
    id 'java'
    id "xyz.jpenilla.run-paper" version "2.0.0"
    id "org.sonarqube" version "3.5.0.2730"
}

group = 'eu.fx3.plugins'
version = '1.8-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT'
    compileOnly 'org.apache.commons:commons-text:1.10.0'
    implementation 'com.github.simplix-softworks:simplixstorage:3.2.5'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'net.kyori:adventure-text-serializer-bungeecord:4.1.2'
    compileOnly 'net.kyori:adventure-text-minimessage:4.12.0' // Included in Paper API since 1.18.2
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    runServer {
        minecraftVersion("1.19.2")
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "mindsolve_TotalDeathMessages"
        property "sonar.organization", "mindsolve"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}